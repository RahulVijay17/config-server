My Understanding

Items.xml file

in hybris in case of java spring app we create our own java and provide mapping to our table.
in case of hybris we'll not create java class and database tables it will be done by hybris framework itself.

so both things creating a java class and tables corresponding to the particular java class is taken by hybris framework by using items.xml

it has its own syntax and once we do the build the java classes will be created by automatically.

the name convention is like for items.xml is extension-items.xml file
its not mandatory file wherever we need required

in items.xml file we basically have 6 different types to be defind.

1.atomic types 
basic datatypes - primitives,int double 
in real time projects we dont need to create atomic types because most of the atomic types which are required are already defind by hybris itself

in platform ->ext -> core-> resources -> core-items 

2.collection types
<collection code =" " //we must give unique value to the name across the hybris
element type="list,set" //datatype of the collection values which we define it in the items.xml file in type="" 
type="" //list or set ,its not mandatory by default it will take List

3.enum types
when we have a set of constant to define some particular feature we use enum type
it must be followed only after collection type
dynamic=true ; whenever we mention this enum behaves as a dynamic enum which means whenever we deploy this code and our enum will have this 4 values and we want to additional value for that enum we can still able to add the enum values in backoffice.
it means that enum type will eligible to take even more values without change it in the itemx xml file we can go to backoffice and add even more values if we define dynamic is true 

4.map types
argument type - key data type
return type = value data type

5.relation types

6.item types
item types

<item type code = "product" 
and the class which generates by using rhis code will always genererated by appending model to it.
autocreate=" " - it informs hybris to create its type in db
genereate=" " - it generates the java class

if its in attribute level
autocreate=" " - it informs hybris to create its column type in db
genereate=" " - it generates the getter setter

even if we dont specify them it remains as true

modifiers tag -
read - true -> it means the attribute is only used to read the data in db
write - true -> it means the attribute is editable in db
initial - true -> it means the value will be generated by startup itself it cannot be changed further
optional- true -> which means the attribute can contain value or empty ,it will be still ok for hybris to execute the query when we are inserting the data
unique - true -> it means the the attribute can contain only unique values only.

persistance tag
property - attribute will be eligible to store data in the database
means its going to be attribute which will have column in the database which can take the values
we need to give property in order to store the data in database 


